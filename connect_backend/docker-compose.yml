version: "3"

services:

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - 9443:9443
    volumes:
      - ./portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - ADMIN_USERNAME=connect4fun-admin
      - ADMIN_PASSWORD=connect4fun-admin123
    restart: unless-stopped

  mysql:
    image: mysql:8.0.35
    container_name: mysql
    networks:
      backend:
        aliases:
          - mysql
      adminer:
        aliases:
          - mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: connect
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin1234
    ports:
      - "3600:3306"
    volumes:
      - my-datavolume:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  django_service:
    build: .
    depends_on:
      - mysql
    container_name: django_service
    networks:
      - backend
      - frontend
    volumes:
      - .:/django_service
    ports:
      - "8000:8000"

  react_service:
    build: ../connect4fun-client

    container_name: react_service
    networks:
      - frontend
    volumes:
      - .:/react_service
    ports:
      - "3000:3000"

  adminer:
    build: .
    depends_on:
      - mysql
    container_name: adminer
    image: adminer
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    networks:
      - adminer

    volumes:
      - .:/adminer
    restart: unless-stopped

volumes:
  my-datavolume:
  portainer_data:
  adminer:

networks:
  backend:
    name: backend
  frontend:
    name: frontend
  adminer:
    name: adminer
